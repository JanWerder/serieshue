@page "{Tcode?}"
@using Models
@model serieshue.IndexModel

@{
    Layout = "_Layout";
}
<div class="row">
    <div class="p-4 p-md-4 mb-4 rounded text-bg-dark col-md-12 shadow-lg">
        <div class="rounded ship-hero-inside">
            <div class="col-md-12 px-0">
                <h1 class="display-4 fst-italic">@Model.Title.PrimaryTitle</h1>
                <small>@Model.Title.StartYear - @Model.Title.EndYear</small>
                <p class="lead my-1">@Model.Title.Genres</p>
            </div>
        </div>
    </div>
    <div class="position-relative d-flex justify-content-center">
        <div class="card justify-content-center flex-row px-4 py-2 shadow-lg">
            <span class="caption-left">Episodes</span>
            <div class="table-responsive-sm fit-content">
                <div>
                    <table class="table table-light table-responsive caption-top border-white">
                        <caption class="text-center">Seasons</caption>
                        <thead class="border-white">
                            <tr class="border-white">
                                <th scope="col"></th>
                                @for (int i = 1; i <= Model.SeasonCount; i++)
                                {
                                    <th scope="col">@i</th>
                                }
                            </tr>
                        </thead>
                        <tbody class="border-white">
                            @for (int j = 1; j <= Model.EpisodeCount; j++)
                            {
                                <tr>
                                    @for (int i = 0; i <= Model.SeasonCount; i++)
                                    {
                                        @if (i == 0)
                                        {
                                            <td scope="row">@j</td>
                                        }
                                        else
                                        {
                                            Episode episode = Model.Title.Episodes.Where(x => x.EpisodeNumber == j && x.SeasonNumber == i).FirstOrDefault();
                                            <td scope="row" data-rating="true" class="rating-td border-white">
                                                @if (episode != null)
                                                {
                                                    <a class="rating" target="_blank" href="https://www.imdb.com/title/@episode.Tconst/">@episode.Rating</a>
                                                }
                                            </td>
                                        }
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var scheme = 1;
    var rating = document.querySelectorAll('[data-rating="true"]');
    for (var i = 0; i < rating.length; i++) {
        var ratingValue = parseFloat(rating[i].innerText.replace(/,/g, '.'));
        if (ratingValue != "") {
            if (ratingValue > 8.5) {
                rating[i].classList.add("great-scheme-" + scheme);
            }
            else if (ratingValue >= 7.5) {
                rating[i].classList.add("good-scheme-" + scheme);
            }
            else if (ratingValue >= 6.5) {
                rating[i].classList.add("regular-scheme-" + scheme);
            }
            else if (ratingValue >= 5) {
                rating[i].classList.add("bad-scheme-" + scheme);
            }
            else if (ratingValue < 5) {
                rating[i].classList.add("garbage-scheme-" + scheme);
            }
        }
    }

    var table = document.querySelector('table');
    var cells = table.querySelectorAll('a');
    for (var i = 0; i < cells.length; i++) {
        cells[i].addEventListener('mouseover', function (e) {
            var row = e.target.parentNode.parentNode;
            var column = e.target.parentNode.cellIndex;

            if (row.cells === undefined) {
                return;
            }

            row.cells[0].classList.add('hovered');
            table.rows[0].cells[column].classList.add('hovered');
        });
        cells[i].addEventListener('mouseout', function (e) {
            var row = e.target.parentNode.parentNode;
            var column = e.target.parentNode.cellIndex;

            if (row.cells === undefined) {
                return;
            }

            row.cells[0].classList.remove('hovered');
            table.rows[0].cells[column].classList.remove('hovered');
        });
    }
</script>
